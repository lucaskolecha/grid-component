!function(n){function e(o){if(a[o])return a[o].exports;var l=a[o]={i:o,l:!1,exports:{}};return n[o].call(l.exports,l,l.exports,e),l.l=!0,l.exports}var a={};e.m=n,e.c=a,e.i=function(n){return n},e.d=function(n,a,o){e.o(n,a)||Object.defineProperty(n,a,{configurable:!1,enumerable:!0,get:o})},e.n=function(n){var a=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(a,"a",a),a},e.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},e.p="",e(e.s=1)}([function(n,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),a(2);var o={template:a(3),bindings:{ngModel:"=",colors:"=",sizes:"=",layout:"=?"},controller:function(){var n=this;n.$onInit=function(){n.selecionados=n.ngModel,n.cost=n.cost||null,n.sale=n.sale||null,n.margin=n.margin||null,n.addList=function(e){n.generate=e.map(function(e){return n.blockInput=!1,{id:e.id,name:e.name,colors:[]}}),n.ngModel=n.generate},n.selecionados&&(n.addList(n.selecionados),n.generate=n.selecionados,n.selecionados=n.generate.map(function(n){return{id:n.id,name:n.name}})),n.removeListColor=function(e,a){for(var o=0;o<=n.generate[a].colors.length-1;o++)n.generate[a].colors[o].name==e.name&&n.generate[a].colors.splice(o,1)},n.calculateMargin=function(){return(100*n.sale/n.cost-100)/100*100},n.addBarCode=function(e,a){var o=n.calculateMargin();n.generate[e].colors[a].bars.push({id:null,value:"0000000000 - new",cost:n.cost,sale:n.sale,margin:o})},n.removeBarCode=function(e,a,o){var l=n.generate[e].colors[a].bars.indexOf(o);n.generate[e].colors[a].bars.splice(l,1)},n.generateBars=function(e,a){if(n.layout.bars){var o=n.calculateMargin();n.generate[a].colors.forEach(function(a){a.name==e.name&&(a.bars=[{id:null,value:"0000000000",cost:n.cost,sale:n.sale,margin:o}])})}},n.removeList=function(e){console.log(n.generate.length);for(var a=0;a<=n.generate.length-1;a++)n.generate[a].id==e.id&&n.generate.splice(a,1);0==n.generate.length&&(n.blockInput=!0)},n.copyColors=function(e){if(n.layout.bars){var a=n.calculateMargin();n.generate[e].colors=n.generate[e-1].colors.map(function(e){return{id:e.id,name:e.name,bars:[{id:null,value:"",cost:n.cost,sale:n.sale,margin:a}]}})}else n.generate[e].colors=n.generate[e-1].colors.map(function(n){return{id:n.id,name:n.name,qtdColor:n.qtdColor}})},n.checkPrevious=function(e){return!(e>0)||!n.generate[e-1].colors.length>0},n.ngModel=n.generate}}};e.default=o},function(n,e,a){"use strict";var o=a(0),l=function(n){return n&&n.__esModule?n:{default:n}}(o);angular.module("mobiageGrid",[]).component("grid",l.default)},function(n,e){},function(n,e){n.exports='<div class="panel gmd ma-panel">\n    <div class="panel-body ma-pad-panel">\n        <div class="row">\n            <div ng-class="$ctrl.layout.facilitator ? \'col-md-4\' : \'col-md-12\'" style="margin-top: 7px;">\n                <gumga-chips placeholder="Buscar Tamanho..." on-remove="$ctrl.removeList(value)" ng-model="$ctrl.selecionados" input-position="start">\n                    <gumga-chips-item ng-repeat="item in $ctrl.selecionados" ng-value="item">\n                        {{item.name}}\n                    </gumga-chips-item>\n                    <gumga-chips-option ng-repeat="option in $ctrl.sizes" ng-value="option">\n                        {{option.name}}\n                    </gumga-chips-option>\n                </gumga-chips>\n                <br>\n                <button class="btn btn-primary" ng-class="$ctrl.layout.floatRightButton ? \'pull-right\' : \'\'" ng-hide="$ctrl.generate.length > 0"\n                    ng-click="$ctrl.addList($ctrl.selecionados)">Inserir Tamanhos</button>\n            </div>\n            <div class="col-xs-6 col-md-4" ng-show="$ctrl.layout.facilitator">\n                <gmd-input>\n                    <input type="text" class="form-control gmd" ng-disabled="$ctrl.blockInput == false" ng-model="$ctrl.cost" id="name">\n                    <span class="bar"></span>\n                    <label for="name" class="control-label">cost</label>\n                </gmd-input>\n            </div>\n            <div class="col-xs-6 col-md-4" ng-show="$ctrl.layout.facilitator">\n                <gmd-input>\n                    <input type="text" class="form-control gmd" ng-disabled="$ctrl.blockInput == false" ng-model="$ctrl.sale" id="sale">\n                    <span class="bar"></span>\n                    <label for="sale" class="control-label">sale</label>\n                </gmd-input>\n            </div>\n        </div>\n    </div>\n</div>\n<div ng-repeat="obj in $ctrl.generate">\n    <div class="panel gmd ma-panel" style="min-height: 123px;">\n        <div class="panel-body ma-pad-card">\n            <div class="row reset-height">\n                <div class="ma-no-pad-left text-center" ng-class="$ctrl.layout.bars ? \'col-md-1\' : \'col-md-2\'">\n                    <label class="ma-label-grid">\n                        <span class="bigger">{{obj.name}}</span>\n                        <span ng-show="obj.colors.length > 0" class="less">Cores</span>\n                        <span ng-show="obj.colors.length > 0" class="less">{{obj.colors.length}}</span>\n                    </label>\n                </div>\n                <div ng-class="$ctrl.layout.bars ? \'col-md-5\' : \'col-md-10\'">\n                    <div style="margin-top: 15px;">\n                        <gumga-chips placeholder="Buscar Cor..." item-focused="focusedColor" on-remove="$ctrl.removeListColor(value, $index)" on-selected="$ctrl.generateBars(value, $index)"\n                            ng-model="obj.colors" input-position="start">\n                            <gumga-chips-item ng-repeat="item in obj.colors" ng-value="item">\n                                {{item.name}}\n                            </gumga-chips-item>\n                            <gumga-chips-option ng-if="option.name !== obj.colors[$index].name" ng-repeat="option in $ctrl.colors" ng-value="option">\n                                {{option.name}}\n                            </gumga-chips-option>\n                        </gumga-chips>\n                        <a class="ma-grid-link" ng-hide="!obj.colors.length == 0 || $ctrl.checkPrevious($index)" ng-click="$ctrl.copyColors($index)">Copiar cores do tamanho anterior</a>\n                    </div>\n                </div>\n                <div class="col-md-6">\n                    <div class="row" ng-repeat="color in obj.colors">\n\n                        <div class="col-md-5 ma-no-pad-left" style="margin-top: 15px;" ng-if="color.id == focusedColor.id && $ctrl.layout.qtdColor">\n                            <gmd-input>\n                                <input type="text" class="form-control gmd" ng-model="color.qtdColor" id="qtdColor" required>\n                                <span class="bar"></span>\n                                <label for="qtdColor" class="control-label">Quantidade</label>\n                            </gmd-input>\n                        </div>\n\n                        <div ng-repeat="bar in obj.colors[$index].bars" ng-if="color.id == focusedColor.id && $ctrl.layout.bars">\n                            <div class="col-md-12">\n                                <span class="glyphicon glyphicon-remove ma-remove-grid" ng-if="!$first" ng-click="$ctrl.removeBarCode($parent.$parent.$parent.$parent.$index,$parent.$parent.$parent.$index,bar)"></span>\n                            </div>\n                            <div class="col-md-6" style="margin-top: 25px;">\n                                <div>\n                                    <gmd-input>\n                                        <input type="text" class="form-control gmd" ng-model="bar.value" id="codBarras" required>\n                                        <span class="bar"></span>\n                                        <label for="codBarras" class="control-label">Cód. Barras</label>\n                                    </gmd-input>\n                                </div>\n                            </div>\n                            <div style="margin-top:10px;">\n                                <div class="col-md-3">\n                                    <gmd-input>\n                                        <input type="text" class="form-control gmd" ng-model="bar.cost" id="intcost">\n                                        <span class="bar"></span>\n                                        <label for="intcost" class="control-label">cost</label>\n                                    </gmd-input>\n                                </div>\n                                <div class="col-md-2">\n                                    <gmd-input>\n                                        <input type="text" class="form-control gmd" ng-model="bar.margin" id="intmargin">\n                                        <span class="bar"></span>\n                                        <label for="intmargin" class="control-label">margin</label>\n                                    </gmd-input>\n                                </div>\n                                <div class="col-md-3">\n                                    <gmd-input>\n                                        <input type="text" class="form-control gmd" ng-model="bar.sale" id="intsale">\n                                        <span class="bar"></span>\n                                        <label for="intsale" class="control-label">sale</label>\n                                    </gmd-input>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row" ng-show="$ctrl.layout.bars">\n                            <div class="col-md-12" ng-if="color.$$hashKey == focusedColor.$$hashKey">\n                                <a class="pull-right ma-grid-add-barcode " ng-click="$ctrl.addBarCode($parent.$parent.$index,$index)">Adicionar Cód. Barras</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'}]);